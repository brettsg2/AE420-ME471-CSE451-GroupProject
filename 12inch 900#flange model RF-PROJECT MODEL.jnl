# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAcis('D:/MS PROGRAM/project/MODEL 12INCH 900#RF FLANGE/obj/hbolt.sat', 
    scaleFromFile=OFF)
mdb.models['Model-1'].ConstrainedSketchFromGeometryFile(geometryFile=mdb.acis, 
    name='hbolt')
mdb.models['Model-1'].ConstrainedSketch(name='__sweep__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__sweep__'].sketchOptions.setValues(gridOrigin=
    (13.5, 0.0))
mdb.models['Model-1'].sketches['__sweep__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['hbolt'])
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0, 
    transform=(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 27.0, 87.4, 0.0))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(-100.0, 
    0.0), point2=(100.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].sketches['__sweep__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['hbolt'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='BOLT', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['BOLT'].BaseSolidRevolve(angle=180.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, 0.0), point2=(
    46.25, 0.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[13])
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], point1=(
    0.172988891601563, -101.34156036377))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], point1=(
    18.2157287597656, -75.0297546386719))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], point1=(
    28.8773345947266, -97.230339050293))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], point1=(
    23.1364898681641, -89.0079040527344))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], point1=(
    21.4962005615234, -119.84204864502))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[13], point1=(
    41.5892791748047, 0.205558776855469))
mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['BOLT'].regenerate()
# Save by bijran on 2018_11_14-21.18.48; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_14-21.18.59; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAcis(
    'D:/MS PROGRAM/project/MODEL 12INCH 900#RF FLANGE/obj/RF12FLANGE900.sat', 
    scaleFromFile=OFF)
mdb.models['Model-1'].ConstrainedSketchFromGeometryFile(geometryFile=mdb.acis, 
    name='RF12FLANGE900')
# Save by bijran on 2018_11_14-21.34.33; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['RF12FLANGE900'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='FLANGE', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['FLANGE'].BaseSolidRevolve(angle=9.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], textPoint=(
    113.669471740723, -44.2024307250977), value=146.0)
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], textPoint=(
    180.355697631836, -81.387809753418), value=190.5)
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[6], textPoint=(
    132.77619934082, -121.953659057617), value=305.0)
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    342.575500488281, -82.890251159668), value=79.4, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[6], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[7])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    211.825592041016, -8.0), value=6.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[5])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    184.219741821289, 8.81254577636719), value=44.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    296.738586425781, -156.479156494141), value=95.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[7])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    299.619293212891, 34.7456665039063), value=114.5, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[4], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[6])
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    158.654357910156, -246.754196166992), value=16.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[5], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[7], ))
mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['FLANGE'].regenerate()
mdb.openAcis(
    'D:/MS PROGRAM/project/MODEL 12INCH 900#RF FLANGE/obj/BOLT12HOLE900.sat', 
    scaleFromFile=OFF)
mdb.models['Model-1'].ConstrainedSketchFromGeometryFile(geometryFile=mdb.acis, 
    name='BOLT12HOLE900')
# Save by bijran on 2018_11_14-21.53.30; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_14-21.56.23; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openAcis(
    'D:/MS PROGRAM/project/MODEL 12INCH 900#RF FLANGE/obj/SPIRAL12WOUND900GASK.sat'
    , scaleFromFile=OFF)
mdb.models['Model-1'].ConstrainedSketchFromGeometryFile(geometryFile=mdb.acis, 
    name='SPIRAL12WOUND900GASK')
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['SPIRAL12WOUND900GASK'])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='SPRIALWOUND GASKET', 
    type=DEFORMABLE_BODY)
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].BaseSolidRevolve(angle=9.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    184.512283325195, -1.20052242279053), value=2.25, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    153.114288330078, -2.1346435546875), value=2.25, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].offset(distance=2.25, objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], ), side=LEFT)
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], point1=(
    167.6240234375, 1.50215911865234))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], point1=(
    163.2080078125, 1.81840133666992))
mdb.models['Model-1'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], point1=(
    184.657165527344, 1.02779006958008))
mdb.models['Model-1'].sketches['__edit__'].DistanceDimension(entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], entity2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], textPoint=(
    155.953155517578, -10.5151023864746), value=162.0)
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[11]), vector=(0.0, 
    -0.25))
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[12]), vector=(0.0, 
    4.25))
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[9], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[10], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[11], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[12]), vector=(0.0, 
    -0.25))
mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['FLANGE'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=15.44, name='__profile__', 
    sheetSize=617.63, transform=
    mdb.models['Model-1'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['FLANGE'].faces[5], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['FLANGE'].edges[16], 
    sketchOrientation=RIGHT, origin=(251.124084, -8.25, 19.763894)))
mdb.models['Model-1'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=15.44, name='__profile__', 
    sheetSize=617.63, transform=
    mdb.models['Model-1'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['FLANGE'].faces[5], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['FLANGE'].edges[18], 
    sketchOrientation=RIGHT, origin=(251.124084, -8.25, 19.763894)))
mdb.models['Model-1'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['BOLT12HOLE900'])
mdb.models['Model-1'].sketches['__profile__'].undo()
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['FLANGE'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=15.44, name='__profile__', 
    sheetSize=617.63, transform=
    mdb.models['Model-1'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['FLANGE'].faces[5], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['FLANGE'].edges[16], 
    sketchOrientation=RIGHT, origin=(251.124084, -8.25, 19.763894)))
mdb.models['Model-1'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5]), vector=(
    -19.7638940706998, 251.124083994436))
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5]), vector=(
    -19.7638940706998, 251.124083994436))
mdb.models['Model-1'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-1'].sketches['BOLT12HOLE900'])
mdb.models['Model-1'].sketches['__profile__'].Arc3Points(point1=(-143.697372, 
    123.002628), point2=(-130.644144895917, 40.5877956002015), point3=(
    123.002628, -143.697372))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-162.697372, 
    123.002628), point2=(331.96, 123.002628000001))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(123.002628, 
    -124.697372), point2=(123.002628, 177.56))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[18]), vector=(
    -103.2387339293, -374.126711994436))
mdb.models['Model-1'].sketches['__profile__'].rotate(angle=90.0, centerPoint=(
    19.7638940706998, -251.124083994436), objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[18]))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].rotate(angle=-90.0, centerPoint=(
    19.7638940706998, -251.124083994436), objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[18]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[18], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[49]))
mdb.models['Model-1'].parts['FLANGE'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-1'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-1'].parts['FLANGE'].faces[5], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-1'].parts['FLANGE'].edges[16])
del mdb.models['Model-1'].sketches['__profile__']
# Save by bijran on 2018_11_14-22.13.35; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_14-22.14.01; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_14-22.14.29; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(gridSpacing=6.16, name='__profile__', 
    sheetSize=246.78, transform=
    mdb.models['Model-1'].parts['BOLT'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-1'].parts['BOLT'].faces[5], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['BOLT'].edges[6], 
    sketchOrientation=RIGHT, origin=(-10.6271, 65.466983, 0.0)))
mdb.models['Model-1'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__profile__'])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-65.466983, 10.6271)
    , point2=(54.933017, 10.6271))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(54.933017, 10.6271), 
    point2=(-65.466983, 10.6271))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[14], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].parts['BOLT'].PartitionFaceBySketchThruAll(faces=
    mdb.models['Model-1'].parts['BOLT'].faces.getSequenceFromMask(('[#24 ]', ), 
    ), sketch=mdb.models['Model-1'].sketches['__profile__'], sketchPlane=
    mdb.models['Model-1'].parts['BOLT'].faces[5], sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-1'].parts['BOLT'].edges[6])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['BOLT'].vertices[0], point2=
    mdb.models['Model-1'].parts['BOLT'].vertices[1], point3=
    mdb.models['Model-1'].parts['BOLT'].vertices[7])
mdb.models['Model-1'].parts['BOLT'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), edges=(mdb.models['Model-1'].parts['BOLT'].edges[17], ), line=
    mdb.models['Model-1'].parts['BOLT'].edges[3], sense=FORWARD)
mdb.models['Model-1'].parts['BOLT'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#4 ]', ), 
    ), edges=(mdb.models['Model-1'].parts['BOLT'].edges[18], ), line=
    mdb.models['Model-1'].parts['BOLT'].edges[14], sense=FORWARD)
mdb.models['Model-1'].parts['BOLT'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#4 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['BOLT'].faces[17])
mdb.models['Model-1'].parts['BOLT'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#10 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['BOLT'].faces[12])
mdb.models['Model-1'].parts['FLANGE'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['FLANGE'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), extendFace=mdb.models['Model-1'].parts['FLANGE'].faces[1])
mdb.models['Model-1'].parts['FLANGE'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['FLANGE'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), extendFace=mdb.models['Model-1'].parts['FLANGE'].faces[13])
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].PartitionEdgeByPoint(edge=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].edges[1], point=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].InterestingPoint(
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].edges[1], MIDDLE))
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].PartitionFaceByShortestPath(
    faces=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].vertices[2], point2=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].InterestingPoint(
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].edges[4], MIDDLE))
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].PartitionCellByExtendFace(
    cells=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].faces[0])
#* Feature creation failed.
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].PartitionCellByExtendFace(
    cells=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), extendFace=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].faces[1])
#* Feature creation failed.
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].PartitionFaceByShortestPath(
    faces=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].faces.getSequenceFromMask(
    ('[#2 ]', ), ), point1=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].vertices[0], point2=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].InterestingPoint(
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].edges[4], MIDDLE))
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].deleteFeatures((
    'Partition edge-1', 'Partition face-1', 'Partition face-2'))
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].PartitionCellByPlaneThreePoints(
    cells=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), point1=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].InterestingPoint(
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].edges[5], MIDDLE), 
    point2=mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].InterestingPoint(
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].edges[1], MIDDLE), 
    point3=mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].InterestingPoint(
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].edges[3], MIDDLE))
mdb.models['Model-1'].parts['FLANGE'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['FLANGE'].cells.getSequenceFromMask(('[#4 ]', 
    ), ), point1=mdb.models['Model-1'].parts['FLANGE'].InterestingPoint(
    mdb.models['Model-1'].parts['FLANGE'].edges[37], MIDDLE), point2=
    mdb.models['Model-1'].parts['FLANGE'].InterestingPoint(
    mdb.models['Model-1'].parts['FLANGE'].edges[27], MIDDLE), point3=
    mdb.models['Model-1'].parts['FLANGE'].InterestingPoint(
    mdb.models['Model-1'].parts['FLANGE'].edges[16], MIDDLE))
mdb.models['Model-1'].parts['FLANGE'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['FLANGE'].cells.getSequenceFromMask(('[#4 ]', 
    ), ), point1=mdb.models['Model-1'].parts['FLANGE'].vertices[5], point2=
    mdb.models['Model-1'].parts['FLANGE'].InterestingPoint(
    mdb.models['Model-1'].parts['FLANGE'].edges[47], MIDDLE), point3=
    mdb.models['Model-1'].parts['FLANGE'].InterestingPoint(
    mdb.models['Model-1'].parts['FLANGE'].edges[45], MIDDLE))
mdb.models['Model-1'].parts['FLANGE'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['FLANGE'].cells.getSequenceFromMask(('[#4 ]', 
    ), ), point1=mdb.models['Model-1'].parts['FLANGE'].InterestingPoint(
    mdb.models['Model-1'].parts['FLANGE'].edges[37], MIDDLE), point2=
    mdb.models['Model-1'].parts['FLANGE'].InterestingPoint(
    mdb.models['Model-1'].parts['FLANGE'].edges[50], MIDDLE), point3=
    mdb.models['Model-1'].parts['FLANGE'].vertices[10])
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='FLANGE-1', 
    part=mdb.models['Model-1'].parts['FLANGE'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'SPRIALWOUND GASKET-1', part=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='BOLT-1', part=
    mdb.models['Model-1'].parts['BOLT'])
mdb.models['Model-1'].rootAssembly.rotate(angle=180.0, axisDirection=(0.0, 0.0, 
    18.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('BOLT-1', ))
mdb.models['Model-1'].rootAssembly.rotate(angle=180.0, axisDirection=(0.0, 
    -120.4, 0.0), axisPoint=(0.0, 0.0, 0.0), instanceList=('BOLT-1', ))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('BOLT-1', ), vector=
    (263.41648, -0.25, 41.721072))
mdb.models['Model-1'].rootAssembly.rotate(angle=9.0, axisDirection=(0.0, 
    -120.4, 0.0), axisPoint=(263.41648, -0.25, 41.721072), instanceList=(
    'BOLT-1', ))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    53.820686340332, 67.2918548583984), value=87.65, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[8], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[7])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    82.2753219604492, 17.4850425720215), value=87.65, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[10])
mdb.models['Model-1'].sketches['__edit__'].undo()
mdb.models['Model-1'].sketches['__edit__'].HorizontalDimension(textPoint=(
    26.3018112182617, 78.9477767944336), value=9.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[7], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
mdb.models['Model-1'].sketches['__edit__'].VerticalDimension(textPoint=(
    90.8866348266602, 29.8187026977539), value=87.65, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[8])
mdb.models['Model-1'].sketches['__edit__'].offset(distance=0.25, objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], ), side=RIGHT)
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(27.0, 120.15), point2=(
    27.0, 120.4))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[18])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[18])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[6], ))
mdb.models['Model-1'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[17], ), vector=(0.0, 
    0.25))
mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['BOLT'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-1'].parts['BOLT'].backup()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['BOLT'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['BOLT'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['BOLT'].features['Partition face-1'].sketch)
mdb.models['Model-1'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['BOLT'].features['Partition face-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['BOLT'].regenerate()
mdb.models['Model-1'].parts['BOLT'].deleteFeatures(('Partition face-1', 
    'Partition cell-1', 'Partition cell-3', 'Partition cell-2'))
mdb.models['Model-1'].parts['BOLT'].deleteFeatures(('Partition cell-4', 
    'Partition cell-5'))
mdb.models['Model-1'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), point1=mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[1], CENTER), point2=
    mdb.models['Model-1'].parts['BOLT'].vertices[5], point3=
    mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[7], MIDDLE))
mdb.models['Model-1'].parts['BOLT'].PartitionCellBySweepEdge(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), edges=(mdb.models['Model-1'].parts['BOLT'].edges[8], ), sweepPath=
    mdb.models['Model-1'].parts['BOLT'].edges[14])
mdb.models['Model-1'].parts['BOLT'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#4 ]', ), 
    ), edges=(mdb.models['Model-1'].parts['BOLT'].edges[18], ), line=
    mdb.models['Model-1'].parts['BOLT'].edges[1], sense=REVERSE)
mdb.models['Model-1'].parts['BOLT'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#2 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['BOLT'].faces[8])
mdb.models['Model-1'].parts['BOLT'].PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#2 ]', ), 
    ), extendFace=mdb.models['Model-1'].parts['BOLT'].faces[20])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'].sketch)
mdb.models['Model-1'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['BOLT'].features['Solid revolve-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.translate(instanceList=('BOLT-1', ), vector=
    (0.0, 0.0, 200.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('BOLT-1', ), vector=
    (0.0, 0.166667, -200.0))
# Save by bijran on 2018_11_15-00.14.38; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(description=
    'source Marks mech handbook - Materials', name='SPRIAL WOUND GASKET')
mdb.models['Model-1'].materials['SPRIAL WOUND GASKET'].Elastic(table=((18000.0, 
    0.3), ))
mdb.models['Model-1'].materials['SPRIAL WOUND GASKET'].Expansion(table=((
    1.8e-05, ), ))
mdb.models['Model-1'].materials['SPRIAL WOUND GASKET'].GasketMembraneElastic(
    table=((18000.0, 0.3), ))
mdb.models['Model-1'].materials['SPRIAL WOUND GASKET'].GasketTransverseShearElastic(
    table=((68.966, ), ))
mdb.models['Model-1'].Material(name='FLANGE')
mdb.models['Model-1'].materials['FLANGE'].Elastic(table=((203395.0, 0.3), ))
mdb.models['Model-1'].materials['FLANGE'].Expansion(table=((1.265e-05, ), ))
mdb.models['Model-1'].Material(name='BOLT AND NUT')
mdb.models['Model-1'].materials['BOLT AND NUT'].Elastic(table=((204000.0, 0.3), 
    ))
mdb.models['Model-1'].materials['BOLT AND NUT'].Expansion(table=((1.265e-05, ), 
    ))
# Save by bijran on 2018_11_15-00.46.47; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-00.47.15; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.makeIndependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'], ))
mdb.models['Model-1'].HomogeneousSolidSection(material='BOLT AND NUT', name=
    'BOLT', thickness=1.0)
mdb.models['Model-1'].parts['BOLT'].Set(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#3f ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['BOLT'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['BOLT'].sets['Set-1'], sectionName='BOLT', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].HomogeneousSolidSection(material='FLANGE', name=
    'Section-2', thickness=1.0)
mdb.models['Model-1'].sections.changeKey(fromName='Section-2', toName='FLANGE')
mdb.models['Model-1'].parts['FLANGE'].Set(cells=
    mdb.models['Model-1'].parts['FLANGE'].cells.getSequenceFromMask(('[#3f ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['FLANGE'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['FLANGE'].sets['Set-1'], sectionName='FLANGE', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].GasketSection(material='SPRIAL WOUND GASKET', name=
    'GASKET')
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].Set(cells=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['SPRIALWOUND GASKET'].sets['Set-1'], 
    sectionName='GASKET', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']), size=2.0)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']), size=10.0)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']), size=30.0)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']), size=20.0)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']), size=5.0)
mdb.models['Model-1'].rootAssembly.setMeshControls(algorithm=ADVANCING_FRONT, 
    regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    mask=('[#1f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), ), technique=SWEEP)
mdb.models['Model-1'].rootAssembly.setMeshControls(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    mask=('[#1f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), ), technique=STRUCTURED)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#1f ]', ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), ), technique=FREE)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']))
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    mask=('[#3 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    mask=('[#3f ]', ), ), ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(elemShape=HEX, regions=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ), technique=STRUCTURED)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.1, edges=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].edges.getSequenceFromMask(
    ('[#800 ]', ), ), minSizeFactor=0.1, size=0.5)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    ('[#3f ]', ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(elemShape=HEX, regions=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    ('[#3f ]', ), ), technique=STRUCTURED)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    distortionControl=DEFAULT), ElemType(elemCode=C3D6, elemLibrary=STANDARD), 
    ElemType(elemCode=C3D4, elemLibrary=STANDARD, secondOrderAccuracy=OFF, 
    distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].cells.getSequenceFromMask(
    ('[#3f ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'], ))
# Save by bijran on 2018_11_15-01.03.52; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-01.04.12; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].StaticStep(matrixSolver=DIRECT, matrixStorage=SYMMETRIC, 
    name='Step-1', nlgeom=ON, previous='Initial')
mdb.models['Model-1'].steps['Step-1'].setValues(matrixSolver=DIRECT, 
    matrixStorage=SOLVER_DEFAULT)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].edges.getSequenceFromMask(
    ('[#100 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    mask=('[#2120000 #2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces.getSequenceFromMask(
    mask=('[#180024a ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].faces.getSequenceFromMask(
    mask=('[#200 ]', ), ), name='Set-11')
mdb.models['Model-1'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-11'])
# Save by bijran on 2018_11_15-01.08.43; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    mask=('[#21002020 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].faces.getSequenceFromMask(
    mask=('[#30 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces.getSequenceFromMask(
    mask=('[#88000 ]', ), ), name='Set-12')
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-12'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    ('[#240000 #4 ]', ), ), name='Set-13')
mdb.models['Model-1'].XsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-13'])
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(typeName=ZSYMM)
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(typeName=ZSYMM)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(typeName=XSYMM)
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(typeName=XSYMM)
# Save by bijran on 2018_11_15-01.40.53; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(typeName=ZSYMM)
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(localCsys=
    mdb.models['Model-1'].rootAssembly.datums[1])
mdb.models['Model-1'].rootAssembly.DatumPlaneByPrincipalPlane(offset=0.0, 
    principalPlane=XYPLANE)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    ZAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    ZAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    XAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    XAXIS)
mdb.models['Model-1'].rootAssembly.DatumAxisByPrincipalAxis(principalAxis=
    XAXIS)
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Datum csys-1', 
    'Datum plane-1', 'Datum axis-1', 'Datum axis-2', 'Datum axis-3', 
    'Datum axis-4', 'Datum axis-5'))
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(typeName=ZSYMM)
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CARTESIAN, name='Datum csys-1', origin=(0.0, 0.0, 0.0), point1=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].vertices[17], 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].edges[12], MIDDLE))
del mdb.models['Model-1'].rootAssembly.features['Datum csys-1']
mdb.models['Model-1'].rootAssembly.DatumCsysByThreePoints(coordSysType=
    CARTESIAN, line1=(1.0, 0.0, 0.0), line2=(0.0, 1.0, 0.0), name=
    'Datum csys-1', origin=(0.0, 0.0, 0.0))
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(localCsys=
    mdb.models['Model-1'].rootAssembly.datums[43])
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(localCsys=None)
# Save by bijran on 2018_11_15-02.17.07; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#3 ]', ), 
    ), point1=mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[32], MIDDLE), point2=
    mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[12], MIDDLE), point3=
    mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[29], MIDDLE))
#* Feature creation failed.
mdb.models['Model-1'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-1'].parts['BOLT'].cells.getSequenceFromMask(('[#3 ]', ), 
    ), point1=mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[10], MIDDLE), point2=
    mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[29], MIDDLE), point3=
    mdb.models['Model-1'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-1'].parts['BOLT'].edges[32], MIDDLE))
mdb.models['Model-1'].parts['FLANGE'].DatumAxisByPrincipalAxis(principalAxis=
    YAXIS)
mdb.models['Model-1'].parts['FLANGE'].DatumPointByCoordinate(coords=(0.0, 0.0, 
    0.0))
mdb.models['Model-1'].parts['FLANGE'].DatumAxisByTwoPoint(point1=
    mdb.models['Model-1'].parts['FLANGE'].vertices[24], point2=
    mdb.models['Model-1'].parts['FLANGE'].vertices[15])
del mdb.models['Model-1'].parts['FLANGE'].features['Datum axis-2']
mdb.models['Model-1'].parts['FLANGE'].DatumAxisByTwoPoint(point1=
    mdb.models['Model-1'].parts['FLANGE'].vertices[32], point2=
    mdb.models['Model-1'].parts['FLANGE'].vertices[16])
del mdb.models['Model-1'].parts['FLANGE'].features['Datum axis-2']
mdb.models['Model-1'].parts['FLANGE'].DatumAxisByTwoPoint(point1=
    mdb.models['Model-1'].parts['FLANGE'].vertices[32], point2=
    mdb.models['Model-1'].parts['FLANGE'].datums[10])
mdb.models['Model-1'].parts['FLANGE'].DatumPlaneByLinePoint(line=
    mdb.models['Model-1'].parts['FLANGE'].datums[13], point=
    mdb.models['Model-1'].parts['FLANGE'].vertices[29])
del mdb.models['Model-1'].parts['FLANGE'].features['Datum plane-1']
mdb.models['Model-1'].parts['FLANGE'].DatumCsysByTwoLines(CARTESIAN, line1=
    mdb.models['Model-1'].parts['FLANGE'].datums[13], line2=
    mdb.models['Model-1'].parts['FLANGE'].datums[9], name='Datum csys-1')
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].boundaryConditions['BC-1'].setValues(localCsys=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].datums[15])
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-3']
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=10.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=7.1)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=7.0)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=7.0)
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=7.1)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=6.5)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
# Save by bijran on 2018_11_15-20.33.01; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    mask=('[#2120000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces.getSequenceFromMask(
    mask=('[#c0012514 ]', ), ), name='Set-4')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    mask=('[#2120000 #2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces.getSequenceFromMask(
    mask=('[#c0012514 ]', ), ), name='Set-4')
mdb.models['Model-1'].rootAssembly.Set(name='Set-5', nodes=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].nodes.getSequenceFromMask(
    mask=('[#e000c #f0f #0 #3ffc000 ]', ), ))
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='Set-5', toName=
    'gaskets1')
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='Set-4', toName=
    'flgbolts')
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].edges.getSequenceFromMask(
    ('[#8000 ]', ), ), name='gaskets2')
mdb.models['Model-1'].rootAssembly.Set(name='gaskettop', nodes=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].nodes.getSequenceFromMask(
    mask=('[#c7c00090 #31800000 #3f000 #0 #3f ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ), 
    size=1.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ), 
    size=5.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.Set(name='gaskets1', nodes=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].nodes.getSequenceFromMask(
    mask=('[#0 #f0f #0 #3ffc000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='gaskettop', nodes=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].nodes.getSequenceFromMask(
    mask=('[#c7c00090 #31800000 #3f000 #0 #3f ]', ), ))
# Save by bijran on 2018_11_15-20.54.52; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['gaskettop'])
mdb.models['Model-1'].ZsymmBC(createStepName='Step-1', localCsys=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].datums[15], name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['gaskets2'])
mdb.models['Model-1'].ZsymmBC(createStepName='Step-1', localCsys=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].datums[15], name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['gaskets1'])
mdb.models['Model-1'].ZsymmBC(createStepName='Step-1', localCsys=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].datums[15], name=
    'BC-4', region=mdb.models['Model-1'].rootAssembly.sets['flgbolts'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces.getSequenceFromMask(
    ('[#4400000 ]', ), ), name='bolttop')
del mdb.models['Model-1'].rootAssembly.sets['bolttop']
mdb.models['Model-1'].rootAssembly.Set(name='bolttop', nodes=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].nodes.getSequenceFromMask(
    mask=('[#400 #0:2 #778000 #7c #0:10 #fc000000 #fbf ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].nodes.getSequenceFromMask(
    mask=('[#0:36 #100001 ]', ), ))
mdb.models['Model-1'].YsymmBC(createStepName='Step-1', localCsys=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].datums[15], name=
    'BC-5', region=mdb.models['Model-1'].rootAssembly.sets['bolttop'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    mask=('[#240000 #4 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].faces.getSequenceFromMask(
    mask=('[#400 ]', ), ), name='flangeglobal')
mdb.models['Model-1'].ZsymmBC(createStepName='Step-1', localCsys=None, name=
    'BC-6', region=mdb.models['Model-1'].rootAssembly.sets['flangeglobal'])
# Save by bijran on 2018_11_15-21.09.43; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-21.10.08; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#3f ]', ), ))
mdb.models['Model-1'].rootAssembly.PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#24 ]', ), ), extendFace=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces[28])
mdb.models['Model-1'].rootAssembly.PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#21 ]', ), ), extendFace=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces[23])
#* Feature creation failed.
mdb.models['Model-1'].rootAssembly.PartitionCellByExtendFace(cells=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#21 ]', ), ), extendFace=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces[23])
#* Feature creation failed.
# Save by bijran on 2018_11_15-21.15.19; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=STANDARD), ElemType(elemCode=C3D6, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D4, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#1fb ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=5.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#1fb ]', ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#1fb ]', ), ), sizeGrowthRate=1.28)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=4.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#127 ]', ), ))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.05, edges=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].edges.getSequenceFromMask(
    ('[#c8 #80000000 ]', ), ), minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], 
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1']), size=5.5)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#127 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteSeeds(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].edges.getSequenceFromMask(
    ('[#c8 #c2000000 #1 ]', ), ))
mdb.models['Model-1'].rootAssembly.seedEdgeBySize(constraint=FINER, 
    deviationFactor=0.05, edges=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].edges.getSequenceFromMask(
    ('[#40003ee #c0000000 #221 ]', ), ), minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#127 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteSeeds(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].edges.getSequenceFromMask(
    ('[#222 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteSeeds(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].edges.getSequenceFromMask(
    ('[#c8 ]', ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#100 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteSeeds(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].edges.getSequenceFromMask(
    ('[#4000000 #80000000 #220 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteSeeds(regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].edges.getSequenceFromMask(
    ('[#104 #40000000 #1 ]', ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=5.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=4.5)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.generateMesh(boundaryPreview=ON, regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#4 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.05, 
    minSizeFactor=0.01, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=4.5)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.generateMesh(boundaryPreview=ON, regions=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#4 ]', ), ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ), size=7.1)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'], ))
# Save by bijran on 2018_11_15-21.42.38; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'], ))
mdb.models['Model-1'].rootAssembly.deleteMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ), 
    size=1.0)
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'], ))
# Save by bijran on 2018_11_15-21.47.31; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-21.48.10; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-21.49.42; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-21.49.53; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(name='bolttop', nodes=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].nodes.getSequenceFromMask(
    mask=('[#400 #0:2 #f007f #0:8 #7df8 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].nodes.getSequenceFromMask(
    mask=('[#0:76 #4 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='gaskets1', nodes=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].nodes.getSequenceFromMask(
    mask=('[#c #ffffc000 #3 #0 #f0f0000 #0:24 #fffc0000', ' #ffffffff:2 #3f ]', 
    ), )+\
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].nodes.getSequenceFromMask(
    mask=('[#0:12 #800000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='gaskettop', nodes=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].nodes.getSequenceFromMask(
    mask=('[#90 #0 #ffffc000 #7fff #fff0 #0 #fff8000', 
    ' #3ffe0000 #0:8 #fffffffc #ffffffff:6 #3fffffff #0:16 #ff800000', 
    ' #ffffffff:8 #ff ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='bolttop', nodes=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].nodes.getSequenceFromMask(
    mask=('[#400 #0:2 #f007f #0:8 #7ff8 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].nodes.getSequenceFromMask(
    mask=('[#0:76 #4 ]', ), ))
# Save by bijran on 2018_11_15-22.04.11; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].materials['BOLT AND NUT'].setValues(description=
    'units in mpa')
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(typeName=ENCASTRE)
mdb.models['Model-1'].boundaryConditions['BC-3'].setValues(typeName=ZSYMM)
# Save by bijran on 2018_11_15-22.25.43; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    formulation=ROUGH)
mdb.models['Model-1'].rootAssembly.Surface(name='CP-1-FLANGE-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    ('[#40000 #400 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-1-SPRIALWOUND GASKET-1', 
    side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['SPRIALWOUND GASKET-1'].faces.getSequenceFromMask(
    ('[#84 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-2-BOLT-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['BOLT-1'].faces.getSequenceFromMask(
    ('[#20100000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-2-FLANGE-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['FLANGE-1'].faces.getSequenceFromMask(
    ('[#400380 #2000 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    createStepName='Initial', enforcement=SURFACE_TO_SURFACE, 
    interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-1-FLANGE-1'], name=
    'CP-1-FLANGE-1-SPRIALWOUND GASKET-1', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-1-SPRIALWOUND GASKET-1'], 
    sliding=FINITE, surfaceSmoothing=AUTOMATIC)
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    createStepName='Initial', enforcement=SURFACE_TO_SURFACE, 
    interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-2-BOLT-1'], name=
    'CP-2-BOLT-1-FLANGE-1', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-2-FLANGE-1'], sliding=
    FINITE, surfaceSmoothing=AUTOMATIC)
mdb.models['Model-1'].interactions['CP-1-FLANGE-1-SPRIALWOUND GASKET-1'].setValues(
    adjustMethod=NONE, bondingSet=None, enforcement=SURFACE_TO_SURFACE, 
    initialClearance=OMIT, sliding=SMALL, supplementaryContact=SELECTIVE, 
    thickness=ON)
mdb.models['Model-1'].interactions['CP-2-BOLT-1-FLANGE-1'].setValues(
    adjustMethod=NONE, bondingSet=None, enforcement=SURFACE_TO_SURFACE, 
    initialClearance=OMIT, sliding=SMALL, supplementaryContact=SELECTIVE, 
    thickness=ON)
# Save by bijran on 2018_11_15-22.32.42; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-22.32.54; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_15-22.33.40; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(name='Model-RTJ', objectToCopy=mdb.models['Model-1'])
mdb.models.changeKey(fromName='Model-1', toName='Model-RF')
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'])
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=19.0, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[9], ), side=LEFT)
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].dimensions[1], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[9], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[8], ))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[10], point1=(
    200.201965332031, -9.64558792114258))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(146.0, -2.25), 
    point2=(209.5, -2.25))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[15])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[7], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[15])
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[10], point1=(
    200.824584960938, -8.60522842407227))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[8], point1=(
    163.675811767578, -2.36308670043945))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].dimensions[4], ))
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=5.95, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[9], ), side=LEFT)
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=5.95, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[9], ), side=RIGHT)
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(146.0, -2.25), 
    point2=(209.5, -2.25))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[7], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17])
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=7.92, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17], ), side=RIGHT)
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(184.55, -8.25), 
    point2=(184.55, -15.0))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19])
mdb.models['Model-RTJ'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[16], 
    entity2=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19])
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=7.92, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19], ), side=LEFT)
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=5.95, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19], ), side=LEFT)
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=5.95, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[20], ), side=LEFT)
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(184.55, -2.25), 
    point2=(184.55, -27.5))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[22])
mdb.models['Model-RTJ'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[16], 
    entity2=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[22])
mdb.models['Model-RTJ'].sketches['__edit__'].copyRotate(angle=23.0, 
    centerPoint=(184.55, -2.25), objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[22], ))
mdb.models['Model-RTJ'].sketches['__edit__'].copyMirror(mirrorLine=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[9], objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[23], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[22], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].constraints[36], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[21], ))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[24], point1=(
    188.995086669922, -20.4652900695801))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[23], point1=(
    193.560852050781, -21.7137184143066))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[26], point1=(
    187.957397460938, -12.3505058288574))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[20], point1=(
    190.447814941406, -12.3505058288574))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[25], point1=(
    191.277969360352, -12.7666511535645))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[18], point1=(
    200.201965332031, -9.8536491394043))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[30], point1=(
    177.373123168945, -10.2697944641113))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[16], point1=(
    184.429321289063, -8.81329727172852))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[15], point1=(
    196.673858642578, -6.31644058227539))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[9], point1=(
    191.693023681641, -5.06801223754883))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[28], point1=(
    190.240295410156, -8.18908309936523))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[32], point1=(
    190.655364990234, -7.98100662231445))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17], point1=(
    191.277969360352, -2.36308670043945))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[33], ))
mdb.models['Model-RTJ'].sketches['__edit__'].FilletByRadius(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[27], curve2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[31], nearPoint1=(
    186.621063232422, -7.56326675415039), nearPoint2=(189.627670288086, 
    -10.0034828186035), radius=0.8)
mdb.models['Model-RTJ'].sketches['__edit__'].FilletByRadius(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[29], curve2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[31], nearPoint1=(
    194.638702392578, -7.9938850402832), nearPoint2=(191.632080078125, 
    -9.85993576049805), radius=0.8)
# Save by bijran on 2018_11_16-00.12.00; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_16-00.12.08; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].ConstrainedSketch(name='RTJFLG', objectToCopy=
    mdb.models['Model-RTJ'].sketches['__edit__'])
mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-RTJ'].sketches['__edit__'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].parts['FLANGE'].backup()
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'])
mdb.models['Model-RTJ'].ConstrainedSketch(name='HOLERTJ', objectToCopy=
    mdb.models['Model-RTJ'].sketches['__edit__'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].setValues(
    flipExtrudeDirection=True)
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].setValues(
    flipExtrudeDirection=False)
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].parts['FLANGE'].deleteFeatures(('Partition cell-3', 
    'Partition cell-4', 'Partition cell-5'))
mdb.models['Model-RTJ'].parts['FLANGE'].deleteFeatures(('Datum axis-2', 
    'Datum csys-1'))
del mdb.models['Model-RTJ'].parts['FLANGE'].features['Partition cell-1']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
del mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1']
mdb.models['Model-RTJ'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[46], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['HOLERTJ'])
mdb.models['Model-RTJ'].parts['FLANGE'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-RTJ'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-RTJ'].parts['FLANGE'].edges[46])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
del mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1']
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[15], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['HOLERTJ'])
mdb.models['Model-RTJ'].sketches['__profile__'].CircleByCenterPerimeter(center=
    (20.39442, -259.135677), point1=(19.7638940706998, 15.5759160055638))
mdb.models['Model-RTJ'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].vertices[11], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[2])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=15.44, name='__profile__'
    , sheetSize=617.63, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[15], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[42], 
    sketchOrientation=RIGHT, origin=(259.135677, -8.25, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['HOLERTJ'])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].parts['FLANGE'].DatumAxisByTwoPoint(point1=
    mdb.models['Model-RTJ'].parts['FLANGE'].datums[10], point2=
    mdb.models['Model-RTJ'].parts['FLANGE'].vertices[17])
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[46], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['HOLERTJ'])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[15], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['HOLERTJ'])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[15], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[46], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['HOLERTJ'])
mdb.models['Model-RTJ'].sketches['__profile__'].CircleByCenterPerimeter(center=
    (20.3944201571328, 259.135676987633), point1=(19.7638940706998, 
    15.5759160055638))
mdb.models['Model-RTJ'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].vertices[11], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[2])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].sketches['hbolt'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].sketches['BOLT12HOLE900'])
mdb.models['Model-RTJ'].sketches['__edit__'].Arc3Points(point1=(-143.697372, 
    123.002628), point2=(-33.7596987864026, -92.7622043997985), point3=(
    123.002628, -143.697372))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(-124.697372, 
    123.002628), point2=(283.152627999947, 123.002627999999))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[11])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[8], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[11])
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(126.602628, 
    -85.497372), point2=(126.602628, 172.052628000017))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12])
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(123.002628, 
    -124.697372), point2=(123.002628, 156.902627999947))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12])
mdb.models['Model-RTJ'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[2], 
    entity2=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12])
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12], point1=(
    122.914733886719, 146.088745117188))
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[11], point1=(
    146.493713378906, 128.122406005859))
mdb.models['Model-RTJ'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[8], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[9], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[10], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[13], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[14]), vector=(
    -142.85, -142.85))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[13], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[14], ))
mdb.models['Model-RTJ'].sketches.changeKey(fromName='__edit__', toName=
    'BOLT12HOLE900')
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[15], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
del mdb.models['Model-RTJ'].sketches['__profile__']
mdb.models['Model-RTJ'].ConstrainedSketch(gridSpacing=16.04, name='__profile__'
    , sheetSize=641.82, transform=
    mdb.models['Model-RTJ'].parts['FLANGE'].MakeSketchTransform(
    sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, 
    sketchUpEdge=mdb.models['Model-RTJ'].parts['FLANGE'].edges[46], 
    sketchOrientation=RIGHT, origin=(259.135677, -87.65, 20.39442)))
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['BOLT12HOLE900'])
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(-267.547372, 
    -19.8473720000004), point2=(116.29, -19.8473720000003))
mdb.models['Model-RTJ'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[25])
mdb.models['Model-RTJ'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[22], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[25])
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(-19.847372, 
    -267.547372), point2=(-19.847372, 168.42))
mdb.models['Model-RTJ'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[26])
mdb.models['Model-RTJ'].sketches['__profile__'].ParallelConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[16], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[26])
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[26], point1=(
    -26.0784454929644, 136.075341867796))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[27], point1=(
    -20.8481012980112, -4.19696085984236))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[25], point1=(
    92.9111654642592, -21.2393947041506))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[29], point1=(
    13.1488462690592, -15.9955680893942))
mdb.models['Model-RTJ'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[18], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[19], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[20], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[21], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[24], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[28], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[22], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[23], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[24], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[30]), vector=(
    40.2417921571328, 278.983048987634))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[18], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[19], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[20], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[21], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[22], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[23], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[24], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[30]))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[28], ))
mdb.models['Model-RTJ'].parts['FLANGE'].CutExtrude(flipExtrudeDirection=OFF, 
    sketch=mdb.models['Model-RTJ'].sketches['__profile__'], sketchOrientation=
    RIGHT, sketchPlane=mdb.models['Model-RTJ'].parts['FLANGE'].faces[17], 
    sketchPlaneSide=SIDE1, sketchUpEdge=
    mdb.models['Model-RTJ'].parts['FLANGE'].edges[46])
del mdb.models['Model-RTJ'].sketches['__profile__']
# Save by bijran on 2018_11_16-00.47.11; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].rootAssembly.regenerate()
mdb.models['Model-RTJ'].rootAssembly.features['SPRIALWOUND GASKET-1'].suppress(
    )
#* FeatureError: Regeneration failed
del mdb.models['Model-RTJ'].rootAssembly.features['SPRIALWOUND GASKET-1']
mdb.models['Model-RTJ'].rootAssembly.regenerate()
# Save by bijran on 2018_11_16-00.49.13; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-RTJ'].steps['Step-1']
del mdb.models['Model-RTJ'].interactions['CP-1-FLANGE-1-SPRIALWOUND GASKET-1']
del mdb.models['Model-RTJ'].interactions['CP-2-BOLT-1-FLANGE-1']
del mdb.models['Model-RTJ'].rootAssembly.surfaces['CP-1-SPRIALWOUND GASKET-1']
mdb.models['Model-RTJ'].rootAssembly.deleteSurfaces(surfaceNames=(
    'CP-1-FLANGE-1', 'CP-2-BOLT-1', 'CP-2-FLANGE-1'))
del mdb.models['Model-RTJ'].rootAssembly.features['Partition cell-1']
del mdb.models['Model-RTJ'].rootAssembly.features['Datum csys-1']
del mdb.models['Model-RTJ'].rootAssembly.sets['gaskettop']
del mdb.models['Model-RTJ'].rootAssembly.sets['gaskets1']
# Save by bijran on 2018_11_16-00.53.41; build 6.14-2 2014_08_22-22.00.46 134497
# Save by bijran on 2018_11_16-00.55.50; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Cut extrude-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'])
mdb.models['Model-RTJ'].ConstrainedSketch(name='FLGRTJ', objectToCopy=
    mdb.models['Model-RTJ'].sketches['__edit__'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-RTJ'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
mdb.models['Model-RTJ'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[2])
mdb.models['Model-RTJ'].sketches['__profile__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['FLGRTJ'])
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(191.25, 0.0), 
    point2=(185.0, 0.0))
mdb.models['Model-RTJ'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[20])
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(184.55, -2.25), 
    point2=(196.45, -2.25))
mdb.models['Model-RTJ'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[21])
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[21], point1=(
    187.647171020508, -2.31772804260254))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[20], point1=(
    187.738464355469, -0.581670761108398))
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(184.55, -2.25), 
    point2=(196.45, -2.25))
mdb.models['Model-RTJ'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[22])
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(184.55, -2.25), 
    point2=(184.55, 1.98391819000244))
mdb.models['Model-RTJ'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[23])
mdb.models['Model-RTJ'].sketches['__profile__'].offset(distance=11.9, 
    objectList=(mdb.models['Model-RTJ'].sketches['__profile__'].geometry[23], )
    , side=RIGHT)
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(184.55, 
    1.98391819000244), point2=(196.45, -2.25))
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(196.45, 
    1.98391819000244), point2=(184.55, -2.25))
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(190.5, 
    -0.13304090499878), point2=(190.5, -12.5))
mdb.models['Model-RTJ'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[27])
mdb.models['Model-RTJ'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].vertices[24], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[26])
mdb.models['Model-RTJ'].sketches['__profile__'].EqualDistanceConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].vertices[23], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].vertices[9], midpoint=
    mdb.models['Model-RTJ'].sketches['__profile__'].vertices[24])
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[26], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[25]))
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(184.55, 
    1.98391819000244), point2=(190.5, -12.5))
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(190.5, 
    -0.13304090499878), point2=(190.5, 3.75))
mdb.models['Model-RTJ'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[28])
mdb.models['Model-RTJ'].sketches['__profile__'].ParallelConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[27], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[28])
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(190.5, 3.75), 
    point2=(193.75, 0.0))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[29], ))
mdb.models['Model-RTJ'].sketches['__profile__'].offset(distance=5.565, 
    objectList=(mdb.models['Model-RTJ'].sketches['__profile__'].geometry[27], )
    , side=RIGHT)
mdb.models['Model-RTJ'].sketches['__profile__'].offset(distance=5.565, 
    objectList=(mdb.models['Model-RTJ'].sketches['__profile__'].geometry[27], )
    , side=LEFT)
mdb.models['Model-RTJ'].sketches['__profile__'].offset(distance=8.765, 
    objectList=(mdb.models['Model-RTJ'].sketches['__profile__'].geometry[15], )
    , side=LEFT)
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(188.441348754046, 
    -1.405), point2=(180.689422607422, -1.405))
mdb.models['Model-RTJ'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[33])
mdb.models['Model-RTJ'].sketches['__profile__'].ParallelConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[32], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[33])
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(192.558651245954, 
    -1.405), point2=(201.054641723633, -1.405))
mdb.models['Model-RTJ'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[34])
mdb.models['Model-RTJ'].sketches['__profile__'].ParallelConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[32], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[34])
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[33], point1=(
    185.780715942383, -1.32077980041504))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[32], point1=(
    189.747207641602, -1.32077980041504))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[36], point1=(
    191.641647338867, -1.14302253723145))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[34], point1=(
    194.009689331055, -1.43928527832031))
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(184.935, -1.405), 
    point2=(196.065, -1.405))
mdb.models['Model-RTJ'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[38])
mdb.models['Model-RTJ'].sketches['__profile__'].ParallelConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[35], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[38])
mdb.models['Model-RTJ'].sketches['__profile__'].CircleByCenterPerimeter(center=
    (190.5, -1.405), point1=(196.065, -1.405))
mdb.models['Model-RTJ'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].vertices[41], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[27])
mdb.models['Model-RTJ'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[39], ), vector=(
    0.0, -3.2))
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[39], ), vector=(
    0.0, -3.2))
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].constraints[94], ))
mdb.models['Model-RTJ'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[39], ), vector=(
    0.0, -3.2))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[39], ))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[30], point1=(
    184.805633544922, -8.65498638153076))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[31], point1=(
    196.135604858398, -8.35499286651611))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[40], point1=(
    196.015716552734, -4.18507862091064))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[43], point1=(
    195.686004638672, -2.98510265350342))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[44], point1=(
    195.236404418945, -1.90512466430664))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[45], point1=(
    194.217300415039, -0.225159645080566))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[46], point1=(
    188.672210693359, 0.614822387695313))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[47], point1=(
    185.674865722656, -1.78512763977051))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[48], point1=(
    185.40510559082, -2.86510562896729))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[49], point1=(
    184.989471435547, -3.80223989486694))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[35], point1=(
    182.088394165039, -1.41743803024292))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[41], point1=(
    184.907516479492, -0.943224430084229))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[37], point1=(
    197.794952392578, -1.37001657485962))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[42], point1=(
    196.018203735352, -0.658697605133057))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[53], point1=(
    196.190567016602, -1.46625709533691))
mdb.models['Model-RTJ'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[51], point1=(
    184.781692504883, -1.39438879489899))
mdb.models['Model-RTJ'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[52], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[50], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[54], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[38]), vector=(0.0, 
    5.565))
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[50], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[52], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[54], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[38]), vector=(0.0, 
    1.44799683915788))
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[50], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[13])
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[13], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[50])
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[50], ), vector=(
    0.0, 7.92))
mdb.models['Model-RTJ'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[55], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[13])
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[13], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[55])
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[55], ), vector=(
    0.0, -2.355))
mdb.models['Model-RTJ'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[55], ), vector=(
    0.0, -2.355))
mdb.models['Model-RTJ'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[55])
mdb.models['Model-RTJ'].sketches['__profile__'].undo()
mdb.models['Model-RTJ'].sketches['__profile__'].copyMove(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[55], ), vector=(
    0.0, -0.855))
mdb.models['Model-RTJ'].sketches['__profile__'].TangentConstraint(entity1=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[56], entity2=
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[13])
mdb.models['Model-RTJ'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[52], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[54], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[38]), vector=(0.0, 
    2.355))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[50], ))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[55], ))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[22], ))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[24], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[23]))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[27], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[28]))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[6], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[7], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-RTJ'].sketches['__profile__'].dimensions[1], 
    mdb.models['Model-RTJ'].sketches['__profile__'].dimensions[2], 
    mdb.models['Model-RTJ'].sketches['__profile__'].dimensions[0], 
    mdb.models['Model-RTJ'].sketches['__profile__'].dimensions[1], 
    mdb.models['Model-RTJ'].sketches['__profile__'].dimensions[0]))
mdb.models['Model-RTJ'].ConstrainedSketch(name='adjment', objectToCopy=
    mdb.models['Model-RTJ'].sketches['__profile__'])
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[14], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[15], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[18], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[19], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-RTJ'].sketches['__profile__'].dimensions[5], 
    mdb.models['Model-RTJ'].sketches['__profile__'].dimensions[6], 
    mdb.models['Model-RTJ'].sketches['__profile__'].constraints[27], 
    mdb.models['Model-RTJ'].sketches['__profile__'].constraints[28], 
    mdb.models['Model-RTJ'].sketches['__profile__'].constraints[36], 
    mdb.models['Model-RTJ'].sketches['__profile__'].constraints[37]))
mdb.models['Model-RTJ'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__profile__'].geometry[52], ))
mdb.models['Model-RTJ'].sketches['__profile__'].Line(point1=(184.935, 0.95), 
    point2=(184.939169668683, -2.03461423838149))
mdb.models['Model-RTJ'].Part(dimensionality=THREE_D, name='Part-4', type=
    DEFORMABLE_BODY)
mdb.models['Model-RTJ'].parts['Part-4'].BaseSolidRevolve(angle=9.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Model-RTJ'].sketches['__profile__'])
del mdb.models['Model-RTJ'].sketches['__profile__']
# Save by bijran on 2018_11_16-01.32.09; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].parts.changeKey(fromName='Part-4', toName='RTJ')
mdb.models['Model-RTJ'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-RTJ'].rootAssembly.Instance(dependent=ON, name='RTJ-1', part=
    mdb.models['Model-RTJ'].parts['RTJ'])
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['RTJ'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['RTJ'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['RTJ'].features['Solid revolve-1'])
mdb.models['Model-RTJ'].sketches['__edit__'].retrieveSketch(sketch=
    mdb.models['Model-RTJ'].sketches['adjment'])
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(176.25, 0.0), point2=
    (200.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[74])
mdb.models['Model-RTJ'].sketches['__edit__'].autoTrimCurve(curve1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[74], point1=(
    181.560745239258, -0.0566539764404297))
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'])
mdb.models['Model-RTJ'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[6], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[7], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[11], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[13], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[14], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[27], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[29], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[31], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[34], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[35], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[36], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[37]), vector=(0.0, 
    -0.95))
mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-RTJ'].sketches['__edit__'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].parts['FLANGE'].regenerate()
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['RTJ'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['RTJ'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['RTJ'].features['Solid revolve-1'])
mdb.models['Model-RTJ'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[38], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[54], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[56], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[57]), vector=(0.0, 
    -0.95))
mdb.models['Model-RTJ'].parts['RTJ'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-RTJ'].sketches['__edit__'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].parts['RTJ'].regenerate()
mdb.models['Model-RTJ'].rootAssembly.regenerate()
mdb.models['Model-RTJ'].rootAssembly.translate(instanceList=('BOLT-1', ), 
    vector=(0.0, -0.95, 0.0))
# Save by bijran on 2018_11_16-01.40.25; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].rootAssembly.PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-RTJ'].rootAssembly.instances['FLANGE-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), edges=(
    mdb.models['Model-RTJ'].rootAssembly.instances['BOLT-1'].edges[40], 
    mdb.models['Model-RTJ'].rootAssembly.instances['BOLT-1'].edges[44]), line=
    mdb.models['Model-RTJ'].rootAssembly.instances['FLANGE-1'].edges[17], 
    sense=REVERSE)
# Save by bijran on 2018_11_16-01.43.00; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].rootAssembly.regenerate()
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['BOLT'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['BOLT'].features['Solid revolve-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['FLANGE'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['FLANGE'].features['Solid revolve-1'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-RTJ'].parts['BOLT'].features['Solid revolve-1'].sketch)
mdb.models['Model-RTJ'].parts['BOLT'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-RTJ'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-RTJ'].parts['BOLT'].features['Solid revolve-1'])
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(0.0, 
    -0.0833333333333333), point2=(141.25, -0.0833333333331817))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[14], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19])
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=88.6, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19], ), side=LEFT)
mdb.models['Model-RTJ'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[14], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12]), vector=(0.0, 
    0.95))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[20], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[15], ))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(18.0, 
    88.5166666666667), point2=(18.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[21])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[21])
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].dimensions[0], 
    mdb.models['Model-RTJ'].sketches['__edit__'].dimensions[2]))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[19], ))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(18.0, 0.0), point2=(
    0.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[22])
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[16], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].constraints[33], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[14], ))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(0.0, 121.35), point2=
    (0.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[23])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[23])
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(18.0, 0.0), point2=(
    56.25, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[24])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[21], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[24])
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[21], ))
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].undo()
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(18.0, 0.0), point2=(
    90.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[24])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[21], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[24])
mdb.models['Model-RTJ'].sketches['__edit__'].offset(distance=88.6, objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[24], ), side=LEFT)
mdb.models['Model-RTJ'].sketches['__edit__'].move(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[5], 
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12]), vector=(0.0, 
    0.0833333333333144))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[25], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[24], ))
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[21], ))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(18.0, 88.6), point2=(
    18.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[26])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[12], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[26])
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[23], ))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(0.0, 
    121.433333333333), point2=(0.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[27])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[27])
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalDimension(textPoint=(
    41.6007995605469, 10.5535087585449), value=88.6, vertex1=
    mdb.models['Model-RTJ'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-RTJ'].sketches['__edit__'].vertices[10])
# Save by bijran on 2018_11_16-02.05.33; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[27], ))
mdb.models['Model-RTJ'].sketches['__edit__'].Line(point1=(0.0, 
    121.433333333333), point2=(0.0, 0.0))
mdb.models['Model-RTJ'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-RTJ'].sketches['__edit__'].geometry[28])
mdb.models['Model-RTJ'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[17], entity2=
    mdb.models['Model-RTJ'].sketches['__edit__'].geometry[28])
mdb.models['Model-RTJ'].parts['BOLT'].features['Solid revolve-1'].setValues(
    sketch=mdb.models['Model-RTJ'].sketches['__edit__'])
del mdb.models['Model-RTJ'].sketches['__edit__']
mdb.models['Model-RTJ'].parts['BOLT'].regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].parts['BOLT'].backup()
mdb.models['Model-RTJ'].parts['BOLT'].deleteFeatures(('Partition cell-1', 
    'Partition cell-2', 'Partition cell-3', 'Partition cell-4', 
    'Partition cell-5', 'Partition cell-6'))
mdb.models['Model-RTJ'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].rootAssembly.regenerate()
mdb.models['Model-RTJ'].rootAssembly.translate(instanceList=('BOLT-1', ), 
    vector=(0.0, 1.033333, 0.0))
mdb.models['Model-RTJ'].parts['BOLT'].PartitionCellByExtrudeEdge(cells=
    mdb.models['Model-RTJ'].parts['BOLT'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), edges=(mdb.models['Model-RTJ'].parts['BOLT'].edges[3], ), line=
    mdb.models['Model-RTJ'].parts['BOLT'].edges[11], sense=FORWARD)
mdb.models['Model-RTJ'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-RTJ'].parts['BOLT'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), point1=mdb.models['Model-RTJ'].parts['BOLT'].vertices[7], point2=
    mdb.models['Model-RTJ'].parts['BOLT'].vertices[6], point3=
    mdb.models['Model-RTJ'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-RTJ'].parts['BOLT'].edges[12], MIDDLE))
mdb.models['Model-RTJ'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-RTJ'].parts['BOLT'].cells.getSequenceFromMask(('[#2 ]', 
    ), ), point1=mdb.models['Model-RTJ'].parts['BOLT'].vertices[4], point2=
    mdb.models['Model-RTJ'].parts['BOLT'].vertices[3], point3=
    mdb.models['Model-RTJ'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-RTJ'].parts['BOLT'].edges[21], MIDDLE))
mdb.models['Model-RTJ'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-RTJ'].parts['BOLT'].cells.getSequenceFromMask(('[#a ]', 
    ), ), point1=mdb.models['Model-RTJ'].parts['BOLT'].vertices[8], point2=
    mdb.models['Model-RTJ'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-RTJ'].parts['BOLT'].edges[4], CENTER), point3=
    mdb.models['Model-RTJ'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-RTJ'].parts['BOLT'].edges[0], MIDDLE))
mdb.models['Model-RTJ'].parts['BOLT'].PartitionCellByPlaneThreePoints(cells=
    mdb.models['Model-RTJ'].parts['BOLT'].cells.getSequenceFromMask(('[#3 ]', 
    ), ), point1=mdb.models['Model-RTJ'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-RTJ'].parts['BOLT'].edges[8], MIDDLE), point2=
    mdb.models['Model-RTJ'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-RTJ'].parts['BOLT'].edges[30], MIDDLE), point3=
    mdb.models['Model-RTJ'].parts['BOLT'].InterestingPoint(
    mdb.models['Model-RTJ'].parts['BOLT'].edges[11], MIDDLE))
mdb.models['Model-RTJ'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].rootAssembly.regenerate()
mdb.models['Model-RTJ'].rootAssembly.regenerate()
mdb.models['Model-RTJ'].parts['RTJ'].PartitionCellBySweepEdge(cells=
    mdb.models['Model-RTJ'].parts['RTJ'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), edges=(mdb.models['Model-RTJ'].parts['RTJ'].edges[7], ), sweepPath=
    mdb.models['Model-RTJ'].parts['RTJ'].edges[5])
#* Feature creation failed.
mdb.models['Model-RTJ'].parts['RTJ'].PartitionCellByPatchNEdges(cell=
    mdb.models['Model-RTJ'].parts['RTJ'].cells[0], edges=(
    mdb.models['Model-RTJ'].parts['RTJ'].edges[7], 
    mdb.models['Model-RTJ'].parts['RTJ'].edges[10], 
    mdb.models['Model-RTJ'].parts['RTJ'].edges[3], 
    mdb.models['Model-RTJ'].parts['RTJ'].edges[11], 
    mdb.models['Model-RTJ'].parts['RTJ'].edges[9], 
    mdb.models['Model-RTJ'].parts['RTJ'].edges[6], 
    mdb.models['Model-RTJ'].parts['RTJ'].edges[1], 
    mdb.models['Model-RTJ'].parts['RTJ'].edges[4]))
#* Feature creation failed.
mdb.models['Model-RTJ'].parts['RTJ'].PartitionCellByExtendFace(cells=
    mdb.models['Model-RTJ'].parts['RTJ'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), extendFace=mdb.models['Model-RTJ'].parts['RTJ'].faces[1])
#* Feature creation failed.
mdb.models['Model-RTJ'].parts['RTJ'].PartitionCellByExtendFace(cells=
    mdb.models['Model-RTJ'].parts['RTJ'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), extendFace=mdb.models['Model-RTJ'].parts['RTJ'].faces[1])
#* Feature creation failed.
mdb.models['Model-RTJ'].parts['RTJ'].PartitionFaceByCurvedPathEdgePoints(edge1=
    mdb.models['Model-RTJ'].parts['RTJ'].edges[6], edge2=
    mdb.models['Model-RTJ'].parts['RTJ'].edges[11], face=
    mdb.models['Model-RTJ'].parts['RTJ'].faces[5], point1=
    mdb.models['Model-RTJ'].parts['RTJ'].vertices[5], point2=
    mdb.models['Model-RTJ'].parts['RTJ'].vertices[7])
mdb.models['Model-RTJ'].parts['RTJ'].PartitionCellByPlaneNormalToEdge(cells=
    mdb.models['Model-RTJ'].parts['RTJ'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), edge=mdb.models['Model-RTJ'].parts['RTJ'].edges[7], point=
    mdb.models['Model-RTJ'].parts['RTJ'].vertices[1])
#* Feature creation failed.
mdb.models['Model-RTJ'].parts['RTJ'].PartitionCellByPlanePointNormal(cells=
    mdb.models['Model-RTJ'].parts['RTJ'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), normal=mdb.models['Model-RTJ'].parts['RTJ'].edges[0], point=
    mdb.models['Model-RTJ'].parts['RTJ'].vertices[1])
#* Feature creation failed.
mdb.models['Model-RTJ'].parts['RTJ'].PartitionCellBySweepEdge(cells=
    mdb.models['Model-RTJ'].parts['RTJ'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), edges=(mdb.models['Model-RTJ'].parts['RTJ'].edges[0], ), sweepPath=
    mdb.models['Model-RTJ'].parts['RTJ'].edges[7])
# Save by bijran on 2018_11_16-02.22.08; build 6.14-2 2014_08_22-22.00.46 134497
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-RTJ'].rootAssembly.regenerate()
#* FeatureError: Regeneration failed
mdb.models['Model-RTJ'].rootAssembly.regenerate()
# Save by bijran on 2018_11_16-02.22.34; build 6.14-2 2014_08_22-22.00.46 134497
